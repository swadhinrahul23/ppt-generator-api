import { ChartBubble, ChartCategory, ChartColumn, ChartData, ChartDataMapper, ChartPoint, ChartPointValue, ChartSeries, ChartSlot, ChartValueStyle } from '../types/chart-types';
import { Modification, ModificationTags } from '../types/modify-types';
import { Workbook } from '../types/types';
import ModifyXmlHelper from '../helper/modify-xml-helper';
import { XmlDocument } from '../types/xml-types';
export declare class ModifyChart {
    data: ChartData;
    height: number;
    width: number;
    columns: ChartColumn[];
    sharedStrings: XmlDocument;
    workbook: ModifyXmlHelper;
    workbookTable: ModifyXmlHelper;
    chart: ModifyXmlHelper;
    constructor(chart: XmlDocument, workbook: Workbook, data: ChartData, slot: ChartSlot[]);
    modify(): void;
    modifyExtended(): void;
    modifyWorkbook(): void;
    setColumns(slots: ChartSlot[]): ChartColumn[];
    setValues(): void;
    setExtData(): void;
    setValuesByCategory(cb: any): void;
    setPointStyles(): void;
    setSeries(): void;
    setExtSeries(): void;
    setSeriesDataLabels: () => void;
    sliceChartSpace(): void;
    sliceExtChartSpace(): void;
    prepareWorkbook(): void;
    setWorkbook(): void;
    sliceWorkbook(): void;
    series: (index: number, children: ModificationTags) => ModificationTags;
    chartPoint: (index: number, idx: number, style: ChartValueStyle) => ModificationTags;
    chartPointFill: (color: ChartValueStyle['color']) => ModificationTags;
    chartPointMarker: (markerStyle: ChartValueStyle['marker']) => ModificationTags;
    chartPointBorder: (style: ChartValueStyle['border']) => ModificationTags;
    chartPointLabel: (index: number, idx: number, labelStyle: ChartValueStyle['label']) => ModificationTags;
    seriesId: (series: number) => ModificationTags;
    seriesLabel: (label: string, series: number) => ModificationTags;
    extSeriesLabel: (label: string, series: number) => ModificationTags;
    seriesStyle: (series: ChartSeries) => ModificationTags;
    seriesDataLabelsRange: (r: number, value: string | number) => ModificationTags;
    seriesDataLabel: (s: any, style: ChartValueStyle['label']) => ModificationTags;
    defaultSeries(r: number, targetCol: number, point: number, category: ChartCategory): ModificationTags;
    xySeries(r: number, targetCol: number, point: number, category: ChartCategory, tag: string, mapData: ChartDataMapper, targetYCol: number): ModificationTags;
    customSeries(r: number, targetCol: number, point: number | ChartPoint | ChartBubble, category: ChartCategory, tag: string, mapData: ChartDataMapper): ModificationTags;
    extendedSeries(r: number, targetCol: number, point: number, category: ChartCategory): ModificationTags;
    extPoint: (r: number, c: number, value: string | number) => Modification;
    extSeries: (index: number, children: ModificationTags) => ModificationTags;
    point: (r: number, c: number, value: string | ChartPointValue) => Modification;
    colLabel(c: number, label: string): ModificationTags;
    rowAttributes(r: number, rowId: number): ModificationTags;
    rowLabels(r: number, label: string): ModificationTags;
    rowValues(r: number, c: number, value: ChartPointValue): ModificationTags;
    slice(tag: string, length: number): Modification;
    spanString(): ModificationTags;
    cellValue(value: number | string): ModificationTags;
    sharedString(label: string): ModificationTags;
    setWorkbookTable(): void;
    setWorkbookTableFirstColumn(): void;
    setWorkbookTableColumn(c: number, label: string): void;
    sliceWorkbookTable(): void;
}
